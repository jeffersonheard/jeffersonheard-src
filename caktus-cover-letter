Caktus has been on my radar for years. I recommended Caktus to my colleagues at Renci when I went to start my own company, as a way to professionally develop the Hydroshare project. I also recommended Caktus to various Triangle area startups. In the days where people seem to think you can develop software for little cost overseas, I love that there is a strong, dedicated firm that does great work and works in my favorite languages. In short, I've followed you for years; I think you're a great company with great taste in technology; and I've recommended you guys on several occasions to people who needed work done well.

Having started and been the technical head of two companies, I am very much a self-starter. I have a well-refined work routine and handle working from home and offices with equal ease. Although new to work as a contractor, I have done consulting jobs in the past and a testimonial for my last job said, "Jeff understood quickly what we wanted, scrubbed our messy data, and produced a custom map graphic that was exactly what we wanted--and on time." I have experienced mentors in contracting and consulting and can handle the ins-and-outs.

I have been developing in Python since version 1.5.1, which came out in 1998. I'm fluent in Python 3.x and 2.x. I work equally well in both and I follow PEPs to keep up with what is going into the next versions of the language. I started working with Django 1.3 and the last version I worked with in detail was version 1.8 (my latest project was done with Flask.) In addition, I am intimately familiar with GeoDjango and PostGIS, and even MySQL's spatial extensions, to the extent that they exist. The same goes for MongoDB and RethinkDB. 

I love to code, and I would love to code for Caktus.

I have been developing in Python since version 1.5.1 (which came out in 1998 if you're doing the math). I'm fluent in Python 3.x and 2.x. I work equally well in both and I follow PEPs to keep up with what is going into the next versions of the language. I started working with Django 1.3 and the last version I worked with in detail was version 1.8 (my latest project was done with Flask.) In addition, I am intimately familiar with GeoDjango and PostGIS, and even MySQL's spatial extensions, to the extent that they exist. The same goes for MongoDB and RethinkDB.

Using those skills, I created a geospatial CMS by extending Mezzanine and using the Django REST Framework. https://github.com/jeffersonheard/terrapyn. This project was used extensively at Renci and UNC, and also powers the data on the display wall at the Hunt Library at NCSU, and has been used by projects at Notre Dame and Utah State University. Terrapyn handles all kinds of geospatial data and publishes maps and standards-based open web services that serve custom geospatial data on a request basis, similarly to Mapbox or CartoDB.

This framework and its source technology formed the backbone of Hydroshare, which some at Caktus are familiar with. I left Renci before they contacted you, but I recommended your services to them, and built the backbone of the website so that it could be maintained by a dedicated team of scientists who knew Python well, even with the challenges of distributed management by scientists.

I took that same framework and commercialized it along with a partner in the solar industry to project manage the construction of utility scale solar plants.  The system was used to manage 30 megawatts of new power construction, and although it is no longer on the market, it has influenced other products in the space.

I also built my own ORM and API framework generator, Sondra, based on my frustrations with ORMs, a determination to use consistent naming and metaphors in REST, and the natural fit between JSON data structures and Python arrays and dicts. https://github.com/jeffersonheard/sondra, with docs at https://jeffersonheard.github.io/sondra.  Sondra uses validated JSON documents through JSON-Schema, with RethinkDB as the backend store (I am extending to CouchDB and MongoDB as well). It pairs with Flask to provide a full REST API stack.
